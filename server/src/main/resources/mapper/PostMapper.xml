<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.enaium.server.mapper.PostMapper">
    <resultMap id="BaseResultMap" type="cn.enaium.server.model.entity.Post">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="category" jdbcType="INTEGER" property="category"/>
        <result column="post_time" jdbcType="TIMESTAMP" property="postTime"/>
        <result column="from" jdbcType="BIGINT" property="from"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , title, content, category, post_time, `from`, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByCategory" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post where category=#{category}
    </select>
    <select id="selectByUpdateTime" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post order by update_time desc limit #{start},#{end}
    </select>
    <select id="getCount" resultType="java.lang.Long">
        select count(*)
        from post
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from post
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.enaium.server.model.entity.Post"
            useGeneratedKeys="true">
        insert into post (title, content, category,
                          post_time, `from`, update_time)
        values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{category,jdbcType=INTEGER},
                #{postTime,jdbcType=TIMESTAMP}, #{from,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.enaium.server.model.entity.Post"
            useGeneratedKeys="true">
        insert into post
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="postTime != null">
                post_time,
            </if>
            <if test="from != null">
                `from`,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                #{category,jdbcType=INTEGER},
            </if>
            <if test="postTime != null">
                #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="from != null">
                #{from,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.enaium.server.model.entity.Post">
        update post
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=INTEGER},
            </if>
            <if test="postTime != null">
                post_time = #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="from != null">
                `from` = #{from,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.enaium.server.model.entity.Post">
        update post
        set title       = #{title,jdbcType=VARCHAR},
            content     = #{content,jdbcType=VARCHAR},
            category    = #{category,jdbcType=INTEGER},
            post_time   = #{postTime,jdbcType=TIMESTAMP},
            `from`      = #{from,jdbcType=BIGINT},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>